{"version":3,"sources":["/var/gadget/codegen/framework-1758727840543-pi3ot8/src/global-actions.ts"],"sourcesContent":["import type { AmbientContext } from \"./AmbientContext.js\";\nimport type { ActionTrigger, TriggerWithType, ActionExecutionScope } from \"./types.js\";\nimport type { Scalars } from \"@gadget-client/bambe-crm-app\";\nimport { ShopifyWebhookTriggerForTopic } from \"./WebhookPayloadTypes.js\";\n\n/** Context of the `applyDiscountsAndShipping` action. */\nexport interface ApplyDiscountsAndShippingGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\norderId?: string;    \ntestMode?: boolean;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: ApplyDiscountsAndShippingGlobalActionContext;\n};\n\n\n/** Context of the `applyShippingCostAbsorption` action. */\nexport interface ApplyShippingCostAbsorptionGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: ApplyShippingCostAbsorptionGlobalActionContext;\n};\n\n\n/** Context of the `calculateRefund` action. */\nexport interface CalculateRefundGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\norderId?: string;    \nshopId?: string;    \nlineItems?: { lineItemId?: string;quantity?: number;reason?: string; }[];    \nrefundShipping?: boolean;    \nreason?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: CalculateRefundGlobalActionContext;\n};\n\n\n/** Context of the `createSenditOrder` action. */\nexport interface CreateSenditOrderGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: CreateSenditOrderGlobalActionContext;\n};\n\n\n/** Context of the `debugOrderShipping` action. */\nexport interface DebugOrderShippingGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: DebugOrderShippingGlobalActionContext;\n};\n\n\n/** Context of the `deleteSenditRecord` action. */\nexport interface DeleteSenditRecordGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: DeleteSenditRecordGlobalActionContext;\n};\n\n\n/** Context of the `deleteSheetRowsByTrackingNumber` action. */\nexport interface DeleteSheetRowsByTrackingNumberGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\ntrackingNumbers?: string;    \nshopId?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: DeleteSheetRowsByTrackingNumberGlobalActionContext;\n};\n\n\n/** Context of the `directOrderTest` action. */\nexport interface DirectOrderTestGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\norderId?: string;    \nshopId?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: DirectOrderTestGlobalActionContext;\n};\n\n\n/** Context of the `extractOrderSKUs` action. */\nexport interface ExtractOrderSKUsGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\norderId?: string;    \nshopId?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: ExtractOrderSKUsGlobalActionContext;\n};\n\n\n/** Context of the `getCustomCities` action. */\nexport interface GetCustomCitiesGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: GetCustomCitiesGlobalActionContext;\n};\n\n\n/** Context of the `getDeliveryCharges` action. */\nexport interface GetDeliveryChargesGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\nshopId?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: GetDeliveryChargesGlobalActionContext;\n};\n\n\n/** Context of the `getSenditDistrictId` action. */\nexport interface GetSenditDistrictIdGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: GetSenditDistrictIdGlobalActionContext;\n};\n\n\n/** Context of the `getShippingCost` action. */\nexport interface GetShippingCostGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\norderId?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: GetShippingCostGlobalActionContext;\n};\n\n\n/** Context of the `listRecentOrders` action. */\nexport interface ListRecentOrdersGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: ListRecentOrdersGlobalActionContext;\n};\n\n\n/** Context of the `processBulkReturns` action. */\nexport interface ProcessBulkReturnsGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\norderSelections?: { orderId?: string;selectedItems?: { lineItemId?: string;quantity?: number; }[]; }[];    \nshopId?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: ProcessBulkReturnsGlobalActionContext;\n};\n\n\n/** Context of the `processOrderReturn` action. */\nexport interface ProcessOrderReturnGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\norderId?: string;    \nshopId?: string;    \nlineItems?: { lineItemId?: string;quantity?: number;reason?: string; }[];    \nrefundShipping?: boolean;    \nreason?: string;    \nnotify?: boolean;    \nskipRefund?: boolean;    \ninventoryOnlyReturn?: boolean;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: ProcessOrderReturnGlobalActionContext;\n};\n\n\n/** Context of the `processSpeedafAPI` action. */\nexport interface ProcessSpeedafAPIGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\nshopId?: string;    \nrequestData?: Scalars[\"JSONObject\"];    \ntestMode?: boolean;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: ProcessSpeedafAPIGlobalActionContext;\n};\n\n\n/** Context of the `removeOrderFromSheets` action. */\nexport interface RemoveOrderFromSheetsGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\norderName?: string;    \nshopId?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: RemoveOrderFromSheetsGlobalActionContext;\n};\n\n\n/** Context of the `searchBulkOrdersForReturn` action. */\nexport interface SearchBulkOrdersForReturnGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\norderNumbers?: string[];    \nshopId?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: SearchBulkOrdersForReturnGlobalActionContext;\n};\n\n\n/** Context of the `searchOrderForReturn` action. */\nexport interface SearchOrderForReturnGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\norderName?: string;    \nshopId?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: SearchOrderForReturnGlobalActionContext;\n};\n\n\n/** Context of the `standardizeMoroccanCity` action. */\nexport interface StandardizeMoroccanCityGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: StandardizeMoroccanCityGlobalActionContext;\n};\n\n\n/** Context of the `syncOrders` action. */\nexport interface SyncOrdersGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\nlimit?: number;    \norders?: { id?: string;name?: string;customerName?: string;phone?: string;address?: string;city?: string;rawCity?: string;lineItems?: { name?: string;quantity?: number;sku?: string;price?: string; }[];totalPrice?: string;displayFulfillmentStatus?: string;createdAt?: string;tags?: string[];trackingNumber?: string;isCancelled?: boolean;isDeleted?: boolean;isFulfillmentCancelled?: boolean; }[];\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\"> | TriggerWithType<\"scheduler\">;\n  /**\n  * @private The context of this action.\n  */\n  context: SyncOrdersGlobalActionContext;\n};\n\n\n/** Context of the `testGoogleAuth` action. */\nexport interface TestGoogleAuthGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\nshopId?: string;    \nspreadsheetId?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: TestGoogleAuthGlobalActionContext;\n};\n\n\n/** Context of the `testLocationQuery` action. */\nexport interface TestLocationQueryGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\norderId?: string;    \nshopId?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: TestLocationQueryGlobalActionContext;\n};\n\n\n/** Context of the `testSenditConnection` action. */\nexport interface TestSenditConnectionGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\npublicKey?: string;    \nsecretKey?: string;    \nsaveToPersistent?: boolean;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: TestSenditConnectionGlobalActionContext;\n};\n\n\n/** Context of the `testSenditDeletion` action. */\nexport interface TestSenditDeletionGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: TestSenditDeletionGlobalActionContext;\n};\n\n\n/** Context of the `testTrackingDetection` action. */\nexport interface TestTrackingDetectionGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: TestTrackingDetectionGlobalActionContext;\n};\n\n\n/** Context of the `testWriteToSheet` action. */\nexport interface TestWriteToSheetGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\nspreadsheetId?: string;    \nsheetName?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: TestWriteToSheetGlobalActionContext;\n};\n\n\n/** Context of the `trackSpeedafOrders` action. */\nexport interface TrackSpeedafOrdersGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\nlatestOrderName?: string;    \norderCount?: number;    \nmode?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: TrackSpeedafOrdersGlobalActionContext;\n};\n\n\n/** Context of the `updateDeliveryCharge` action. */\nexport interface UpdateDeliveryChargeGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\nsenditCharge?: number;    \nspeedafCharge?: number;    \nshopId?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: UpdateDeliveryChargeGlobalActionContext;\n};\n\n\n/** Context of the `updateReferenceTracking` action. */\nexport interface UpdateReferenceTrackingGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\norderId?: string;    \nshopId?: string;    \nreferenceTrackingCode?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: UpdateReferenceTrackingGlobalActionContext;\n};\n\n\n/** Context of the `writeBatchOrdersToSheets` action. */\nexport interface WriteBatchOrdersToSheetsGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\nordersData?: string;    \nshopId?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: WriteBatchOrdersToSheetsGlobalActionContext;\n};\n\n\n/** Context of the `writeSpeedafDataToSheets` action. */\nexport interface WriteSpeedafDataToSheetsGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\nshopId?: string;    \ntrackingData?: { trackingNumber?: string;latestStatus?: string; }[];\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: WriteSpeedafDataToSheetsGlobalActionContext;\n};\n\n\n/** Context of the `writeToShopify` action. */\nexport interface WriteToShopifyGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\nshopId?: string;    \nmutation?: string;    \nvariables?: Scalars[\"JSONObject\"];\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: WriteToShopifyGlobalActionContext;\n};\n\n\n/** Context of the `processBulkReturns_old` action. */\nexport interface ProcessBulkReturnsOldGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\norderSelections?: { orderId?: string;selectedItems?: { lineItemId?: string;quantity?: number; }[]; }[];    \nshopId?: string;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: ProcessBulkReturnsOldGlobalActionContext;\n};\n\n\n/** Context of the `processOrderReturn_old` action. */\nexport interface ProcessOrderReturnOldGlobalActionContext extends AmbientContext {\n  /**\n  * @deprecated Use 'returnType' instead.\n  * Useful for returning data from this action by setting `scope.result`.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, custom params).\n  */\n  params: {\norderId?: string;    \nshopId?: string;    \nlineItems?: { lineItemId?: string;quantity?: number;reason?: string; }[];    \nrefundShipping?: boolean;    \nreason?: string;    \nnotify?: boolean;    \nskipRefund?: boolean;\n};\n  /**\n  * An object specifying the trigger to this action (e.g. api call, scheduler etc.)\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * @private The context of this action.\n  */\n  context: ProcessOrderReturnOldGlobalActionContext;\n};\n\n\n"],"names":[],"mappings":"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"}