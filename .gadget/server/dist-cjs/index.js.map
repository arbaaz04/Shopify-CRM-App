{"version":3,"sources":["/var/gadget/codegen/framework-1750587766405-W0frEl/src/index.ts"],"sourcesContent":["/**\n* This is the Gadget server side types library for:\n*\n*   _                     _                                                            \n*  | |__   __ _ _ __ ___ | |__   ___        ___ _ __ _ __ ___         __ _ _ __  _ __  \n*  | '_ \\ / _` | '_ ` _ \\| '_ \\ / _ \\_____ / __| '__| '_ ` _ \\ _____ / _` | '_ \\| '_ \\ \n*  | |_) | (_| | | | | | | |_) |  __/_____| (__| |  | | | | | |_____| (_| | |_) | |_) |\n*  |_.__/ \\__,_|_| |_| |_|_.__/ \\___|      \\___|_|  |_| |_| |_|      \\__,_| .__/| .__/ \n*                                                                         |_|   |_|    \n*\n* Built for environment `Development` at version 2281\n* Framework version: ^1.3.0\n* Edit this app here: https://bambe-crm-app.gadget.dev/edit\n*/\n/// <reference path=\"./ActionContextTypes.d.ts\" />\nimport type { BambeCrmAppClient } from \"@gadget-client/bambe-crm-app\";\nimport { Logger } from \"./AmbientContext\";\nexport { InvalidRecordError } from '@gadgetinc/api-client-core'\n\nexport * from \"./metadataFileTypes\";\nexport * from \"./AmbientContext\";\nexport * from \"./AppConfigs\";\nexport * from \"./AppConfiguration\";\nexport * from \"./AppConnections\";\nimport { AppConnections } from \"./AppConnections\";\nexport * from \"./auth\";\nexport * as DefaultEmailTemplates from \"./email-templates/index\";\nexport * from \"./emails\";\nexport { InvalidStateTransitionError } from \"./errors\";\nexport * from \"./global-actions\";\nexport * from \"./routes\";\nexport * from \"./state-chart/index\";\nexport * from \"./types\";\nexport * from \"./ActionOptions\";\nexport * from \"./effects\";\nexport * from \"./utils\";\nimport type { RouteContext } from \"./routes\";\nexport * from \"./WebhookPayloadTypes\";\n\nexport {\n  preventCrossShopDataAccess,\n  ShopifyBulkOperationState,\n  ShopifySellingPlanGroupProductState,\n  ShopifySellingPlanGroupProductVariantState,\n  ShopifyShopState,\n  ShopifySyncState,\n  abortSync,\n  finishBulkOperation,\n  globalShopifySync,\n  shopifySync,\n} from \"./shopify/index\";\n\n/**\n * @internal\n */\nimport { Globals, actionContextLocalStorage } from \"./globals\";\nexport * from \"./models/ShopifyCustomer\";\nexport * from \"./models/ShopifyGdprRequest\";\nexport * from \"./models/ShopifyOrder\";\nexport * from \"./models/ShopifyShop\";\nexport * from \"./models/ShopifySync\";\nexport * from \"./models/GoogleSheetConfig\";\nexport * from \"./models/Session\";\nexport * from \"./models/ShopifyFulfillment\";\nexport * from \"./models/ShopifyFulfillmentOrder\";\nexport * from \"./models/ShopifyFulfillmentService\";\nexport * from \"./models/ShopifyProduct\";\nexport * from \"./models/ShopifyProductVariant\";\nexport * from \"./models/SenditConfig\";\nexport * from \"./models/SpeedafConfig\";\n\n/**\n* A map of connection name to instantiated connection objects for the app.\n*/\nlet connections: AppConnections;\n\n/**\n * An instance of the Gadget logger\n */\nlet logger: Logger;\n/**\n * An instance of the Gadget API client that has admin permissions\n */\nlet api: BambeCrmAppClient;\n\n/**\n* This is used internally to set the connections.\n* @internal\n*/\nexport const setConnections = (appConnections: AppConnections): void => {\n  connections = new Proxy(appConnections, {\n    get: (target: any, prop: string) => {\n      const actionContext = actionContextLocalStorage.getStore();\n      if(actionContext && actionContext.connections) {\n        return actionContext.connections[prop];\n      }\n\n      const routeContext = Globals.requestContext.get(\"requestContext\");\n      if(routeContext && routeContext.connections) {\n        return routeContext.connections[prop];\n      }\n\n      return target[prop];\n    }\n  })\n}\n\n/**\n * This is used internally to set the rootLogger.\n * @internal\n */\nexport const setLogger = (rootLogger: Logger): void => {\n  // set the internal facing global logger to be this instance, which is tagged with the platform source\n  Globals.logger = rootLogger;\n\n  // set the user-facing global logger to be this instance tagged with the user source, as users are importing this global and using it\n  logger = rootLogger.child({ source: \"user\" });\n};\n\n/**\n * This is used internally to set the client Instance\n * @internal\n */\nexport const setApiClient = (client: BambeCrmAppClient): void => {\n  api = client;\n}\n\nexport {\n  api, logger, connections\n};\n\n/**\n * @internal\n */\nexport {\n  Globals,\n  actionContextLocalStorage\n};\n\n/**\n * Register the globals on the globalThis object for use in the api client constructor when we need access to the global API client instance\n **/\n(globalThis as any).GadgetGlobals = Globals;\n\n\n"],"names":["DefaultEmailTemplates","Globals","InvalidRecordError","InvalidStateTransitionError","ShopifyBulkOperationState","ShopifySellingPlanGroupProductState","ShopifySellingPlanGroupProductVariantState","ShopifyShopState","ShopifySyncState","abortSync","actionContextLocalStorage","api","connections","finishBulkOperation","globalShopifySync","logger","preventCrossShopDataAccess","setApiClient","setConnections","setLogger","shopifySync","appConnections","Proxy","get","target","prop","actionContext","getStore","routeContext","requestContext","rootLogger","child","source","client","globalThis","GadgetGlobals"],"mappings":";;;;;;;;;;;IA0BYA,qBAAqB;;;IAyGjC;;CAEC,GAECC,OAAO;eAAPA,gBAAO;;IAvIT;;;;;;;;;;;;;AAaA,GACA,kDAAkD;IAGzCC,kBAAkB;eAAlBA,iCAAkB;;IAWlBC,2BAA2B;eAA3BA,mCAA2B;;IAalCC,yBAAyB;eAAzBA,iCAAyB;;IACzBC,mCAAmC;eAAnCA,2CAAmC;;IACnCC,0CAA0C;eAA1CA,kDAA0C;;IAC1CC,gBAAgB;eAAhBA,wBAAgB;;IAChBC,gBAAgB;eAAhBA,wBAAgB;;IAChBC,SAAS;eAATA,iBAAS;;IA0FTC,yBAAyB;eAAzBA,kCAAyB;;IARzBC,GAAG;eAAHA;;IAAaC,WAAW;eAAXA;;IAjFbC,mBAAmB;eAAnBA,2BAAmB;;IACnBC,iBAAiB;eAAjBA,yBAAiB;;IAgFZC,MAAM;eAANA;;IAxFLC,0BAA0B;eAA1BA,kCAA0B;;IAmFfC,YAAY;eAAZA;;IAlCAC,cAAc;eAAdA;;IAsBAC,SAAS;eAATA;;IA9DXC,WAAW;eAAXA,mBAAW;;;+BAhCsB;qBAErB;qBACA;qBACA;qBACA;qBACA;qBAEA;+DACyB;qBACzB;wBAC8B;qBAC9B;qBACA;qBACA;qBACA;qBACA;qBACA;qBACA;qBAEA;wBAaP;yBAEP;;CAEC,GACkD;qBACrC;qBACA;qBACA;qBACA;qBACA;qBACA;qBACA;qBACA;qBACA;qBACA;qBACA;qBACA;qBACA;qBACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEd;;AAEA,GACA,IAAIR;AAEJ;;CAEC,GACD,IAAIG;AACJ;;CAEC,GACD,IAAIJ;AAEJ;;;AAGA,GACO,MAAMO,iBAAiB,CAACG;IAC7BT,cAAc,IAAIU,MAAMD,gBAAgB;QACtCE,KAAK,CAACC,QAAaC;YACjB,MAAMC,gBAAgBhB,kCAAyB,CAACiB,QAAQ;YACxD,IAAGD,iBAAiBA,cAAcd,WAAW,EAAE;gBAC7C,OAAOc,cAAcd,WAAW,CAACa,KAAK;YACxC;YAEA,MAAMG,eAAe3B,gBAAO,CAAC4B,cAAc,CAACN,GAAG,CAAC;YAChD,IAAGK,gBAAgBA,aAAahB,WAAW,EAAE;gBAC3C,OAAOgB,aAAahB,WAAW,CAACa,KAAK;YACvC;YAEA,OAAOD,MAAM,CAACC,KAAK;QACrB;IACF;AACF;AAEA;;;CAGC,GACM,MAAMN,YAAY,CAACW;IACxB,sGAAsG;IACtG7B,gBAAO,CAACc,MAAM,GAAGe;IAEjB,qIAAqI;IACrIf,SAASe,WAAWC,KAAK,CAAC;QAAEC,QAAQ;IAAO;AAC7C;AAEA;;;CAGC,GACM,MAAMf,eAAe,CAACgB;IAC3BtB,MAAMsB;AACR;AAcA;;EAEE,GACDC,WAAmBC,aAAa,GAAGlC,gBAAO"}